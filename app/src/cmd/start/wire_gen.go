//go:build !wireinject

// Code generated by Wire. DO NOT EDIT.

package main

import (
	"context"
	"io"
)

func initApplication(ctx context.Context, out io.Writer) (*application, func(), error) {
	config := provideConfig()
	serviceName := provideServiceName()
	logger := provideLogger(out, serviceName)
	repository, cleanup, err := provideRepository(ctx, config, logger)
	if err != nil {
		return nil, nil, err
	}
	generatorConfig := provideGeneratorConfig(config)
	generator := provideGenerator(generatorConfig, logger)
	workerPool := provideWorkerPool(config, repository, logger)
	aggregatorService := provideAggregatorService(repository)
	app := newApplication(config, logger, aggregatorService, generator, workerPool)
	return assembleApplication(app, cleanup)
}
